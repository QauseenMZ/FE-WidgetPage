{"version":3,"sources":["utils/history.ts","components/PageHeader/PageHeader.tsx","components/ConfirmDeleteModal/ConfirmDeleteModal.tsx","utils/routes.utils.ts","components/WidgetList/WidgetList.tsx","components/LanguageSelect/LanguageSelect.tsx","utils/utilityFunctions.utils.ts","components/AddWidget/AddWidget.tsx","components/MainPage/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createBrowserHistory","PageHeader","props","title","titleVariant","additionalButtonComponent","callback","Grid","container","spacing","item","xs","justify","Typography","variant","align","display","style","Button","startIcon","color","onClick","Box","py","Divider","ConfirmDeleteModal","open","onYesHandler","onNoHandler","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","pathURLs","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","fade","palette","common","black","body","fontSize","TableCell","WidgetList","React","useState","openModal","setOpenModal","deleteId","setDeleteId","data","setData","useEffect","localData","localStorage","getItem","JSON","parse","history","push","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableBody","map","row","index","scope","name","language","IconButton","length","gutterBottom","updatedData","filter","setItem","stringify","languageOptions","LanguageSelect","change","val","error","Autocomplete","value","onChange","autoHighlight","options","renderInput","params","TextField","margin","size","required","label","helperText","createData","useStyles","makeStyles","root","width","button","marginRight","instructions","marginTop","marginBottom","AddWidget","classes","activeStep","setActiveStep","setName","setLanguage","setError","steps","updateLocalData","Container","className","Stepper","alternativeLabel","Step","StepLabel","goBack","step","fullWidth","e","target","getStepContent","ArrowBackIos","disabled","prevActiveStep","ArrowForwardIos","MainPage","exact","path","render","App","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6acb7c7b.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React from 'react';\nimport { Grid, Box, Divider, Typography, Button } from '@material-ui/core';\nimport Add from '@material-ui/icons/Add';\n\ntype TitleVariantType = \"button\" | \"caption\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"inherit\" | \"subtitle1\" | \"subtitle2\" | \"body1\" | \"body2\" | \"overline\" | \"srOnly\" | undefined;\n\ninterface PageHeaderProps {\n    title: string;\n    titleVariant?: TitleVariantType;\n    additionalButtonComponent?: JSX.Element;\n    callback?: (...p: any) => any;\n}\n\nconst PageHeader = (props: PageHeaderProps) => {\n    const { title, titleVariant, additionalButtonComponent, callback } = { ...props };\n\n    return (\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Grid container justify=\"space-between\">\n              <Typography variant={titleVariant || 'h4'} align='left' display='inline'>\n                {title}\n              </Typography>\n              { callback && \n                <div style={{ display: '-webkit-box' }}>\n                  {additionalButtonComponent || <Button startIcon={<Add />} variant='contained' color='primary' onClick={callback}>{\"Add New\"}</Button>}\n                </div>\n              }\n            </Grid>\n            <Box py={2}>\n              <Divider />\n            </Box>\n          </Grid>\n        </Grid>\n      );\n}\nexport default PageHeader;\n","import React from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\ninterface ConfirmModalProp {\n  open: boolean;\n  onYesHandler: (...p: any) => void;\n  onNoHandler: (...p: any) => void;\n};\n\nconst ConfirmDeleteModal = (props: ConfirmModalProp) => {\n  const { open, onYesHandler, onNoHandler } = { ...props };\n\n  return (\n    <Dialog open={open} onClose={onNoHandler}>\n      <DialogTitle>{\"Delete Confirmation\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{\"Are you sure you want to delete?\"}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onNoHandler} color='default'>No</Button>\n        <Button onClick={onYesHandler} color='primary'>Yes</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmDeleteModal;\n","export const pathURLs: any = {\n    \"defaultRoot\": '/',\n    \"add\": '/add-details'\n}\n  ","import React, {useEffect} from 'react';\nimport { withStyles, Theme, createStyles, fade } from '@material-ui/core/styles';\nimport { IconButton, TableContainer, Table, TableCell, Paper, TableBody, TableRow, TableHead, Typography } from '@material-ui/core';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport { LinguisticModel } from '../../modals/linguistic.model';\nimport PageHeader from '../PageHeader/PageHeader';\nimport ConfirmDeleteModal from '../ConfirmDeleteModal/ConfirmDeleteModal';\nimport history from '../../utils/history';\nimport { pathURLs } from '../../utils/routes.utils';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: fade(theme.palette.common.black, 0.15),\n      color: theme.palette.common.black,\n    },\n    body: {\n      fontSize: 20,\n    },\n  }),\n)(TableCell);\n\n\nconst WidgetList = () => {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n  const [deleteId, setDeleteId] = React.useState<number>(0);\n  const [data, setData]= React.useState<LinguisticModel[]>([]);\n\n  useEffect(() => {\n    const localData: LinguisticModel[] = localStorage.getItem('languageData') ? JSON.parse(localStorage.getItem('languageData') || '') : [];\n    setData(localData);\n  }, []); \n\n  const deleteRow = () => {\n    const updatedData = data.filter((name, index) => index !== deleteId);\n    setData(updatedData);\n    localStorage.setItem('languageData', JSON.stringify(updatedData));\n    setOpenModal(false);\n  }\n\n  \n  return (\n    <>\n      <PageHeader title=\"Linguistic Details\" callback={() => history.push(pathURLs.add)}/>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Language</StyledTableCell>\n              <StyledTableCell></StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              data.map((row, index) => (\n                <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.language}</TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton color=\"secondary\" onClick={() => {setOpenModal(true); setDeleteId(index)}}>\n                      <DeleteForever />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n            { !data?.length && \n              <TableRow key='none'>\n                <TableCell component=\"th\" scope=\"row\">\n                <Typography variant='body1' gutterBottom>No data available</Typography>\n                </TableCell>\n              </TableRow>\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n      { openModal && \n        <ConfirmDeleteModal open={openModal} onYesHandler={deleteRow} onNoHandler={() => setOpenModal(false)} />\n      }\n    </>\n  )\n}\n\nexport default WidgetList;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface DropdownProps {\n    change: (...p: any) => any;\n    val: any;\n    error?: any; \n}\n\nconst languageOptions = [\n    \"Mandarin Chinese\",\n    \"Spanish\",\n    \"English\",\n    \"Hindi/Urdu\",\n    \"Arabic\",\n    \"Bengali\",\n    \"Portuguese\",\n    \"Russian\",\n    \"Japanese\",\n    \"German\",\n    \"Javanese\",\n    \"Punjabi\",\n    \"Wu\",\n    \"French\",\n    \"Telugu\",\n    \"Vietnamese\",\n    \"Marathi\",\n    \"Korean\",\n    \"Tamil\",\n    \"Italian\",\n    \"Turkish\",\n    \"Cantonese/Yue\"\n];\n\nconst LanguageSelect = ({ change, val, error }: DropdownProps) => {\n  return (\n    <Autocomplete \n      value={val === '' ? null : val}\n      onChange={change}\n      autoHighlight\n      options={languageOptions}\n      renderInput={(params) =>\n        <TextField\n          {...params}\n          margin='dense'\n          size='medium'\n          required={true}\n          label={\"Language\"}\n          error={error}\n          helperText={error && \"Please select your language.\"}\n          variant='outlined' />\n      }\n    />\n  );\n};\n\nexport default LanguageSelect;\n","const createData = (name: string, language: string) => {\n    return { name, language};\n}\n\nexport default createData;","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Stepper, Step, StepLabel, Button, TextField, Container} from '@material-ui/core';\nimport { ArrowForwardIos, ArrowBackIos } from '@material-ui/icons'\nimport PageHeader from '../PageHeader/PageHeader';\nimport LanguageSelect from '../LanguageSelect/LanguageSelect';\nimport history from '../../utils/history';\nimport createData from '../../utils/utilityFunctions.utils';\n\nimport './AddWidget.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\nconst AddWidget = () => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const [name, setName] = useState<string>('');\n    const [language, setLanguage] = useState<string>('');\n    const [error, setError] = useState<string>('');\n    const steps = ['Add name', 'Select language'];\n\n    useEffect(() => {\n      setError('');\n    }, [name, language])\n\n    const handleNext = () => {\n      switch (activeStep) {\n        case 0: {\n          if(!name) {\n            setError('Name is required')\n            return;\n          }\n          break;\n        }\n        case 1: {\n          if(!language) {\n            setError('Language is required')\n            return;\n          }\n\n          updateLocalData();\n          break;\n        }\n        default: \n          break;\n      }\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleComplete = () => {\n        setActiveStep(0);\n        history.goBack();\n    };\n\n    const getStepContent = (step: number) => {\n        switch (step) {\n          case 0:\n            return (\n              <TextField value={name} label=\"Name\" variant=\"outlined\" size='small' fullWidth required\n                error={!!error}\n                helperText={error}\n                onChange={(e: any) => setName(e.target.value)}\n              />\n            )\n          case 1:\n            return (\n              <LanguageSelect error={!!error} val={language} change={(e: ChangeEvent<HTMLInputElement>, val: string) => setLanguage(val)} />\n            );\n          case 2:\n            return;\n          default:\n            return 'Unknown';\n        }\n    }\n      \n    const updateLocalData = () => {\n      let localData: any = localStorage.getItem('languageData');\n      localData = localData ? JSON.parse(localData) : [];\n      localData = [...localData, createData(name, language)];\n      localStorage.setItem('languageData', JSON.stringify(localData))\n    }\n\n    return (\n      <>\n        <PageHeader title=\"Add New\"/>\n        <Container className={classes.root} component={Paper}>\n          <Stepper alternativeLabel activeStep={activeStep}>\n              {steps.map((label) => (\n              <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n              </Step>\n              ))}\n          </Stepper>\n\n          <div>\n            {activeStep === steps.length ? \n              (\n                <>\n                  <div className='form-content'>\n                    <Typography className={classes.instructions}>Added Successfully</Typography>\n                  </div>\n                  <div className=\"form-actions\" >\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleComplete} className={classes.button}>\n                      Done\n                    </Button>\n                  </div>\n                </>\n              ) : \n              (\n                <>\n                  <div className='form-content'>\n                      {getStepContent(activeStep)}   \n                  </div>\n                  <div className=\"form-actions\">\n                    <Button startIcon={<ArrowBackIos/>} color=\"primary\" disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                      <Button startIcon={<ArrowForwardIos/>}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={handleNext}\n                          className={classes.button}\n                      >\n                          {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                      </Button>\n                  </div>\n                </>\n              )}\n          </div>\n        </Container>\n      </>\n    );\n}\n\nexport default AddWidget;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport WidgetList from '../WidgetList/WidgetList';\nimport AddWidget from '../AddWidget/AddWidget';\nimport { pathURLs } from '../../utils/routes.utils';\n\nconst MainPage = () => {\n  return (\n    <div style={{marginTop: '10%'}}>\n      <Switch>\n        {/* Widget List View */}\n        <Route exact path={pathURLs.defaultRoot}\n          render={() => <WidgetList />}\n        />\n\n        <Route exact path={pathURLs.add}\n          render={() => <AddWidget />}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Router } from 'react-router-dom';\nimport history from './utils/history';\nimport MainPage from './components/MainPage/MainPage';\nimport Container from '@material-ui/core/Container';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      <Container maxWidth=\"sm\">\n        <MainPage/>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}